---
title: "survivalGPU : Analyses de survie sur cartes graphiques"
author: 
  - Alexis van STRAATEN\inst{1}
  - Jean FEYDY\inst{2}
  - Anne-Sophie JANNOT\inst{2,3}
institute: 
  - \inst{1} Assistance Publique-Hôpitaux de Paris (AP-HP), Service d'informatique Médicale, Biostatistiques Et Santé Publique, Hôpital Européen Georges Pompidou, Paris
  - \inst{2} HeKA, Centre de Recherche des Cordeliers, INSERM, INRIA, Paris
  - \inst{3} Cellule opérationnelle de la Banque Nationale de Données Maladies Rares, AP-HP, Paris
format:
  beamer:
    header-includes: |
      \titlegraphic{\includegraphics[width=0.14\paperwidth]{images/logo/logo_aphp.png}
                    \includegraphics[width=0.14\paperwidth]{images/logo/logo_epi-phare.png}
                    \includegraphics[width=0.14\paperwidth]{images/logo/inr_logo_rouge.jpg}
                    \includegraphics[width=0.1\paperwidth]{images/logo/logo_heka.jpg}}
    colortheme: seahorse
    fontsize: "10pt"
    aspectratio: 169
editor: visual
bibliography: references.bib
---

## Contexte des données censurées

Données avec une fenêtre d'observation qui dépend du patient.

```{r, out.width="70%", fig.align='center'}

library(ganttrify)

patient <- data.frame(wp = paste("Patient", 1:5),
                      activity = paste("Patient", 1:5),
                      start_date = as.Date(c("2020-09-02", "2020-09-02", "2020-09-05", "2020-09-25", "2020-09-02")),
                      end_date = as.Date(c("2020-09-30", "2020-09-17", "2020-09-22", "2020-09-30", "2020-09-26")))

events <- data.frame(activity = c("Patient 2", "Patient 4"),
                     spot_type = c("X", "X"),
                     spot_date = c("2020-09-17", "2020-09-30"))

ganttrify(project = patient,
          spots = events,
          by_date = TRUE,
          exact_date = TRUE,
          size_text_relative = 1.3,
          # colour_palette = rep("red", 5),
          month_number_label = FALSE,
          month_date_label = FALSE)

```

## L'analyse de survie

**Modèle de régression avec données censurées** : Cox (1972)

**Implémentation sur R** : package `survival` de Terry Therneau, avec la fonction `coxph()`

\

Actuellement dans la recherche médicale:

-   Accès à de larges bases de données de santé.

-   `survival` est acceptable pour des petites études, mais non utilisable pour des études à grande échelle.

    \

**Solution** : utiliser les ressources des cartes graphiques.\
**Objectif** : package `survival` avec support GPU.

## `survivalGPU`

::: columns
::: {.column width="80%"}
Implémentation de 2 modèles :

-   Cox

-   WCE (Weighted Cumulative Exposure) pour la pharmacovigilance

    \

Plus-values de `survivalGPU` :

-   Scalable

-   Rapide

-   Gestion des bootstraps

-   Rétro-compatibilité avec `survival`
:::

::: {.column width="20%"}
![](images/logo/logo_survivalGPU.png)
:::
:::

## Construction de `survivalGPU`

Etapes de construction du package :

1.  Revue du code du package `survival`

2.  Traduction du solveur de Cox (Newton sur fonction convexe) en python avec pytorch pour la compatibilité avec les cartes graphiques Nvidia

3.  Construction du package R avec les fonctions python en utilisant `reticulate`

4.  Tests unitaires : reprise des tests de `survival` et résultats identiques entre `survival` et `survivalGPU` (en cours)

## Tests unitaires

Exemple d'un test unitaire dans `survival`

::: columns
::: {.column width="38%"}
\tiny

```{r, echo=TRUE}
test3 <- data.frame(futime=1:12,
                    fustat=c(1,0,1,0,1,0,0,0,0,0,0,0),
                    x1=rep(0:1,6),
                    x2=c(rep(0,6), rep(1,6)))
test3
```
:::

::: {.column width="62%"}
\tiny

```{r, echo=TRUE}
library(survival)
fit3 <- coxph(Surv(futime, fustat) ~ x1 + x2, test3, iter=25)

# Actual solution
#  time 1, 12 at risk,  3 each of x1/x2 = 00, 01, 10, 11
#  time 2, 10 at risk,                     2, 3,  2 ,  3
#  time 5, 8  at risk,                     1, 3,  1,   3
# Let r1 = exp(beta1), r2= exp(beta2)
# loglik = -log(3 + 3r1 + 3r2 + 3 r1*r2) - log(2 + 2r1 + 3r2 + 3 r1*r2) -
#           log(1 + r1  + 3r2 + 3 r1*r2)

true <- function(beta) {
  r1 <- exp(beta[1])
  r2 <- exp(beta[2])
  loglik <- -log(3*(1+ r1+ r2+ r1*r2)) - log(2+ 2*r1 + 3*r2 + 3*r1*r2) -
    log(1 + r1 + 3*r2 + 3*r1*r2)
  loglik
}

paste("log vraisemblance avec coxph() :", round(fit3$loglik[2], 3))
paste("log vraisemblance avec true()  :", round(true(fit3$coef), 3))

```
:::
:::

## Applications avec le jeu de données synthétique `drugdata`

::: columns
::: {.column width="50%"}
\small

Exemples et tests avec `WCE::drugdata` \vspace{0.25cm}

\small

```{r, echo=TRUE}
library(WCE)
drugdata[43:53,]
```
:::

::: {.column width="50%"}
\

![](images/drugdata_description.png){fig-align="center" width="250"}
:::
:::

## Comparaison `survival` et `survivalGPU`

::: columns
::: {.column width="50%"}
\tiny

```{r, echo=TRUE, eval=TRUE}
library(survival)

## Cox model
coxph_model <- coxph(Surv(Start, Stop, Event) ~ dose,
                     data = drugdata)
round(exp(coxph_model$coefficients), 3) # HR (Hazard Ratio)
```

\vspace{0.3cm}

```{r, echo=TRUE}
## WCE model
wce_model <- WCE(drugdata, "Cox", nknots =  1, cutoff =  90, id = "Id",
                 event = "Event", start = "Start", stop = "Stop",
                 expos = "dose", covariates = c("sex", "age"))
summary(wce_model)
```
:::

::: {.column width="50%"}
\tiny

```{r, echo=TRUE, eval=TRUE}
library(survivalGPU)

## Cox model
coxphGPU_model <- coxphGPU(Surv(Start, Stop, Event) ~ dose,
                           data = drugdata)
round(exp(coxphGPU_model$coefficients), 3)
```

\vspace{0.3cm}

```{r, echo=TRUE}
## WCE model
wceGPU_model <- wceGPU(drugdata, nknots =  1, cutoff =  90, id = "Id",
                       event = "Event", start = "Start", stop = "Stop",
                       expos = "dose", covariates = c("sex", "age"))
summary(wceGPU_model)
```
:::
:::

## Benchmark du modèle WCE

Benchmark du modèle WCE avec `drugdata`

![](images/wce_benchmark.jpg){fig-align="center" width="500"}

## Perspectives

-   Implémentation des features de `survival`, et de nouvelles options tels que les tests de permutation

-   Validation du package à travers des simulations intensives

\

Package disponible sur Github : <https://github.com/jeanfeydy/survivalGPU>
